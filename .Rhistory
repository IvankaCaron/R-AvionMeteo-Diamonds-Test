c("dep_delay", chaine))))$coefficients[, c("Estimate" ,"Pr(>|t|)")])
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$r.squared)
}
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$coefficients[, c("Estimate" ,"Pr(>|t|)")])
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$r.squared)
}
library(nycflights13)
library(dplyr)
library(ggplot2)
flights_weather <- flights %>% inner_join(weather, by = c("time_hour", "origin"))
sum(is.na(flights_weather$dep_delay))
flights_weather_nona <- flights_weather %>% filter(!is.na(dep_delay))
#regresion multiple avec coef
variables <- list('humid', 'precip', 'pressure', 'visib', 'wind_speed', 'wind_gust')
chaine <- c()
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$coefficients[, c("Estimate" ,"Pr(>|t|)")])
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$r.squared)
}
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$coefficients)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$r.squared)
}
variables <- list('humid', 'precip', 'pressure', 'visib', 'wind_speed', 'wind_gust')
chaine <- c()
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$coefficients)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$r.squared)
}
variables <- list('humid', 'precip', 'pressure', 'visib', 'wind_speed', 'wind_gust')
chaine <- c()
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine)))))
}
#regresion multiple
variables <- list('humid', 'precip', 'pressure', 'visib', 'wind_speed')
chaine <- c()
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine)))))
}
#regresion multiple
variables <- list('humid', 'pressure', 'visib', 'wind_speed')
chaine <- c()
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine)))))
}
#regresion multiple
variables <- list('humid', 'precip', 'pressure', 'visib', 'wind_speed')
chaine <- c()
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine)))))
}
#regresion multiple avec coef
variables <- list('humid', 'precip', 'pressure', 'visib', 'wind_speed')
chaine <- c()
for (x in variables) {
chaine <- c(chaine, x)
# print(chaine_1)
print(chaine)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$coefficients)
print(summary(lm(dep_delay~ .,
data = select(flights_weather_nona,
c("dep_delay", chaine))))$r.squared)
}
flights_weather_nona %>% mutate(origin_fac = as.factor(origin))
View(flights_weather_nona)
flights_weather_nonaFactor <- flights_weather_nona %>% mutate(origin_fac = as.factor(origin))
View(flights_weather_nonaFactor)
#sum_temp <-
coefTem <-   summary(lm(dep_delay ~ temp + humid , data=flights_weather_nona))$coefficients
summary(lm(dep_delay ~ temp + humid , data=flights_weather_nona))$coefficients
summary(lm(dep_delay ~ temp + humid , data=flights_weather_nonaFactor))$coefficients
View(flights_weather_nonaFactor)
summary(lm(dep_delay ~ temp + humid + origin_fac , data=flights_weather_nonaFactor))$coefficients
summary(lm(dep_delay ~ temp + humid + distance , data=flights_weather_nonaFactor))$coefficients
#('humid', 'precip', 'pressure', 'visib', 'wind_speed'
#sum_temp <-
coefTem <-   summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed , data=flights_weather_nona))$coefficients
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed , data=flights_weather_nona))$coefficients
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed + distance , data=flights_weather_nonaFactor))$coefficients
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed , data=flights_weather_nonaFactor))$coefficients
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed + distance , data=flights_weather_nonaFactor))$coefficients
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed , data=flights_weather_nona))$coefficients
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed , data=flights_weather_nonaFactor))$coefficients
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed + distance, data=flights_weather_nonaFactor))$coefficients
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed + distance, data=flights_weather_nonaFactor))
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed + distance + origin_fac, data=flights_weather_nonaFactor))
flights_weather_nonaFactor <- flights_weather_nona %>% mutate(origin_fac = as.factor(origin))
n = nrow(flights_weather_nonaFactor)
split = sample(c(TRUE, FALSE), n, replace=TRUE, prob=c(0.75, 0.25))
training = dataset[split, ]
training = flights_weather_nonaFactor[split, ]
testing = flights_weather_nonaFactor[!split, ]
summary(lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed + distance + origin_fac, data=training))
# model
model <-    lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed + distance + origin_fac, data=training)
View(model)
summary(model)
predict(model, training)
predict(model, testing)
flights_weather_nonaFactor%>%ggplot(aes(temp, dep_delay)) +
geom_point() +
geom_smooth(method = 'lm')
flights_weather_nonaFactor%>%ggplot(aes(temp, dep_delay, by = "origin_fac")) +
geom_point() +
geom_smooth(method = 'lm')
flights_weather_nonaFactor%>%ggplot(aes(wind_dir, dep_delay)) +
geom_point() +
geom_smooth(method = 'lm')
flights_weather_nonaFactor %>%
group_by(origin, wind_dir) %>%
summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = wind_dir, y = dep_delay)) +
geom_point(aes(color=origin)) +
geom_smooth(method = 'lm')
summary(model)$coefficients
summary(model)$r.squared
testing
#prediction
predict(model, testing)
pred_y <- predict(model, testing)
pred_y <- c(predict(model, testing))
pred_y <- c(predict(model, testing, type = c("vector")))
pred_y <- c(predict(model, testing))
pred_y <- c(pred_y)
testing
testing$testingPredict <- pred_y
View(testing)
testing$testingPredict%>% select(dep_delay, pred_y)
testing%>% select(dep_delay, testingPredict)
summary(lm(dem_delay ~ testingPredict,data=testing))
summary(lm(dep_delay ~ testingPredict,data=testing))
select(dep_delay, testingPredict)
testing%>% select(dep_delay, testingPredict)
View(testing)
View(testing)
# model
model <-    lm(dep_delay ~ temp + humid + precip + pressure + visib + wind_speed  + origin_fac, data=training)
summary(model)
summary(model)$coefficients
summary(model)$r.squared
#prediction
predict(model, testing)
pred_y <- c(predict(model, testing))
pred_y <- c(pred_y)
testing$testingPredict <- pred_y
testing%>% select(dep_delay, testingPredict)
summary(lm(dep_delay ~ testingPredict,data=testing))
#evaluation du model
cor.test(testing$testingPredict,testing$dep_delay)
#evaluation du model - regresion lin
summary(lm(dep_delay ~0+ testingPredict,data=testing))
summary(lm(dep_delay ~testingPredict,data=testing))
flights_weather %>% mutate(delay_manquante = if_else(is.na(dep_delay), 1, 0)) %>%
group_by(delay_manquante) %>%
summarise_at(vars(temp, humid, precip, pressure, visib, wind_speed, wind_gust), mean, na.rm = T)
flights_weather %>% mutate(delay_manquante = if_else(is.na(dep_delay), 1, 0)) %>%
group_by(delay_manquante) %>%
summarise_at(vars(temp, humid, precip, pressure, visib, wind_speed, wind_gust), moy =mean, na.rm = T)
flights_weather %>% mutate(delay_manquante = if_else(is.na(dep_delay), 1, 0)) %>%
group_by(delay_manquante) %>%
summarise_at(vars(temp, humid, precip, pressure, visib, wind_speed, wind_gust), list(moy = mean) , na.rm = T)
testing %>% mutate(error_squared = abs(testingPredict - dep_delay)) %>%
summarise_at(vars(error_squared),
list(moy = mean, min = min, med = median, max = max, sd = sd), na.rm = T)
summary(lm(dep_delay ~testingPredict,data=testing))
library(lattice)
testing %>% mutate(error_squared = abs(testingPredict - dep_delay)) %>%
summarise_at(vars(error_squared),
list(moy = mean, min = min, med = median, max = max, sd = sd), na.rm = T)
# On entraîne le modèle
model_cv <- caret::train(dep_delay ~ temp + humid + precip + pressure + visib +
wind_speed + distance + as.factor(origin),
data = flights_weather_nona,
na.action  = na.pass,
method = "lm",
trControl = train.control)
train.control <- caret::trainControl(method = "cv", number = 10)
# On entraîne le modèle
model_cv <- caret::train(dep_delay ~ temp + humid + precip + pressure + visib +
wind_speed + distance + as.factor(origin),
data = flights_weather_nona,
na.action  = na.pass,
method = "lm",
trControl = train.control)
View(model_cv)
print(model_cv)
library(dplyr)
library(ggplot2)
diamonds <- ggplot2::diamonds %>% mutate_if(is.factor, ~ factor(., ordered = FALSE))
View(diamonds)
library(lattice)
ncol()
ncol(diamonds)
colnames(diamonds)
#k fold cross validation
train.control <- caret::trainControl(method = "cv", number = 10)
# On entraîne le modèle
model_cv <- caret::train(price ~ carat + as.factor(cut) + as.factor(color) + as.factor(clarity) + depth + table + x + y +z,
data = diamonds,
na.action  = na.pass,
method = "lm",
trControl = train.control)
print(model_cv)
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(clarity, price))+
geom_point(aes(color = carat ))
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(carat, price))+
geom_point(aes(color = carat ))
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =price))+
geom_point(aes(color = carat ))
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price))
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))
diamonds %>% group_by(cut()) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=cut(), y =prix_moy))+
geom_point(aes(color = cut ))
diamonds %>% group_by(cut()) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=cut, y =prix_moy))+
geom_point(aes(color = cut ))
diamonds %>% group_by(cut) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=cut, y =prix_moy))+
geom_point(aes(color = cut ))
diamonds %>% group_by(cut) %>%  %>%
ggplot(aes(x=cut, y =prix_moy))+
geom_point(aes(color = cut ))
diamonds %>% group_by(cut) %>%
ggplot(aes(x=cut, y =prix_moy))+
geom_point(aes(color = cut ))
diamonds %>% group_by(cut) %>%
ggplot(aes(x=cut, y =price))+
geom_point(aes(color = cut ))
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = clarity ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity,color) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = clarity ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = clarity ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = clarity ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(cut) %>%
ggplot(aes(x=cut, y =price))+
geom_point(aes(color = cut ))
diamonds %>% group_by(cut, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = cut ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(cut, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=cut(), y =prix_moy))+
geom_point(aes(color = cut ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(cut, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=cut, y =prix_moy))+
geom_point(aes(color = cut ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(as.factor(cut), clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=cut, y =prix_moy))+
geom_point(aes(color = cut ))+
geom_smooth(method = 'lm')
flights_weather_nonaFactor %>%
group_by(origin, wind_dir) %>%
summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(aes(x = wind_dir, y = dep_delay)) +
geom_point(aes(color=origin)) +
geom_smooth(method = 'lm')
diamonds %>% group_by(carat) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = clarity ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, cut) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = cut ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, table) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = table ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, table) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = carat ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, table) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color =table ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = clarity ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy, size = table))+
geom_point(aes(color = clarity ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, clarity) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color = clarity ))+
geom_smooth(method = 'lm')
diamonds %>% group_by(carat, table) %>%
summarise(prix_moy  = mean(price)) %>%
ggplot(aes(x=carat, y =prix_moy))+
geom_point(aes(color =table ))+
geom_smooth(method = 'lm')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
mat6 <- matrix(c(rep(1,5), rep(2,5), rep(3,5), rep(4, 5), sample(1:100, 60)), nrow = 20)
mat6
tapply(mat6[, 2], mat6[, 1], sum)
mat6 <- matrix(c(rep(1,5), rep(2,5), rep(3,5), sample(1:100, 60)), nrow = 20)
mat6 <- matrix(c(rep(1,5), rep(2,5), rep(3,5), sample(1:100, 60)), nrow = 20)
mat6 <- matrix(c(rep(1,5), rep(2,5), rep(3,5), sample(1:100, 60)), nrow = 15)
View(mat6)
mat6 <- matrix(c(rep(1,4), rep(2,4), rep(3,4), sample(1:100, 60)), nrow = 15)
mat6 <- matrix(c(rep(1,4), rep(2,4), rep(3,4), sample(1:100, 60)), nrow = 12)
View(mat6)
mat6 <- matrix(c(rep(1,4), rep(2,4) sample(1:100, 60)), nrow = 12)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 12)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 8)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 20)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 4)
View(mat6)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 20)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 24)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 25)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 26)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 27)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 28)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 12)
mat6 <- matrix(c(rep(1,4), rep(2,4), sample(1:100, 60)), nrow = 2)
View(mat6)
mat6 <- matrix(sample(1:100, 60)), nrow = 20, ncol(3)
mat6 <- matrix(sample(1:100, 60)), nrow = 20, ncol(3))
mat6 <- matrix(sample(1:100, 60), nrow = 20, ncol(3))
mat6 <- matrix(sample(1:100, 60), nrow = 20, ncol=3)
View(mat6)
tapply(mat6[, 2], mat6[, 1], sum)
View(mat6)
mat6
mat6
for (i in c(1:10)){
# ! N'oubliez pas de mettre la condition entre parenthèses après le for et
# de définir la boucle à l'intérieur d'accolades
print(i)
}
for (i in c(1:10)){
# ! N'oubliez pas de mettre la condition entre parenthèses après le for et
# de définir la boucle à l'intérieur d'accolades
if (i <= 5){
print(i)
} else if (i == 6) {
print(i * 100)
} else {
print(0)
}
}
l1 <- list(1, "ah tiens", 4, " qu'est-ce que je fais à côté d'un 4")
l1
sum(mat6)
mat6
apply(mat5, 1, sum)
mat5 <- matrix(sample(1:100, 60), nrow = 20, ncol=3)
sum(mat5)
apply(mat5, 1, sum)
apply(mat5, 2, sum)
mat6 <- matrix(c(rep(1,5), rep(2,5), rep(3,5), rep(4, 5), sample(1:100, 60)), nrow = 20)
mat6
a = rnorm(10),
a = rnorm(10)
a
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
df
output <- vector("double", ncol(df))  # 1. output
for (i in seq_along(df)) {            # 2. sequence
output[[i]] <- median(df[[i]])      # 3. body
}
output
